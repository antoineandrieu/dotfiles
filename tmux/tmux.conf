set-option -g default-shell /usr/bin/zsh
# Allow mouse support
set -g mouse on

# Enable true color support
set -ga terminal-overrides ',*:Tc'
set -g default-terminal "tmux-256color"

# Load in the pretty tmuxline
if-shell "test -f ~/.tmuxline" "source ~/.tmuxline"

# Fix escape for the sake of vim
set -sg escape-time 0

# Nicer prefix
set -g prefix C-Space
bind Space send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# bind-key -n C-O if-shell -b "split-window -h -c '#{pane_current_path}'"
# bind-key -n C-E if-shell -b "split-window -v -c '#{pane_current_path}'"
# bind-key -n C-O if-shell "!$is_vim" "send-keys C-O" "split-window -h"
# bind-key -n C-E if-shell "!$is_vim" "send-keys C-E" "split-window -v"
bind-key -n C-O split-window -h
bind-key -n C-E split-window -v
bind-key -n C-X kill-pane
bind-key -n C-W kill-window

# r to reload config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
